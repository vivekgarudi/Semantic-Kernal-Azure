context,query
App requests trend,"AppRequests | summarize totalCount=sum(ItemCount) by bin(TimeGenerated, 1d), _ResourceId"
application Failed requests,AppRequests| where Success == false| summarize failedCount=sum(ItemCount) by Name| top 10 by failedCount desc
Application response time trend,"AppRequests| where TimeGenerated > ago(12h) | summarize avgRequestDuration=avg(DurationMs) by bin(TimeGenerated, 10m), _ResourceId | top 10 by avgRequestDuration desc"
Application usage by contry,AppRequests| summarize CountByCountry=count() by ClientCountryOrRegion| top 10 by CountByCountry
container inventory,ContainerInventory | take 5
virtual machines,VMComputer  | take 5
Accounts Failed to Logon,SecurityEvent| where EventID == 4625| summarize count() by TargetAccount
Active service principal risk detections ,"AADServicePrincipalRiskEvents| summarize arg_max(LastUpdatedDateTime, *) by RequestId, ServicePrincipalId| where RiskState == ""atRisk"""
Active user risk detections ,"AADUserRiskEvents| summarize arg_max(LastUpdatedDateTime, *) by RequestId, UserId| where RiskState == ""atRisk"""
All Azure Activity ,"AzureActivity| project TimeGenerated, Caller, OperationName, ActivityStatus, _ResourceId"
All Security Activities,"SecurityEvent| project TimeGenerated, Account, Activity, Computer| sort by TimeGenerated desc"
All SiginLogs events,"SigninLogs| project UserDisplayName, Identity,UserPrincipalName,  AppDisplayName, AppId, ResourceDisplayName"
Failed MFA challenge,"SigninLogs| where ResultType == 50074| project UserDisplayName, Identity,UserPrincipalName, ResultDescription,  AppDisplayName, AppId, ResourceDisplayName| summarize FailureCount=count(), FailedResources=dcount(ResourceDisplayName), ResultDescription=any(ResultDescription) by UserDisplayName"
Failed login Count ,SigninLogs| where ResultType !=0| summarize FailedLoginCount=count() by ResourceDisplayName| sort by FailedLoginCount desc nulls last
Avg node CPU usage percentage per minute  ,"let endDateTime = now();let startDateTime = ago(1h);let trendBinSize = 1m;let capacityCounterName = 'cpuCapacityNanoCores';let usageCounterName = 'cpuUsageNanoCores';KubeNodeInventory| where TimeGenerated < endDateTime| where TimeGenerated >= tartDateTime| distinct ClusterName, Computer, _ResourceId| join hint.strategy=shuffle (  Perf  | where TimeGenerated < endDateTime  | where TimeGenerated >= startDateTime  | where ObjectName == 'K8SNode'  | where CounterName == capacityCounterName  | summarize LimitValue = max(CounterValue) by Computer, CounterName, bin(TimeGenerated, trendBinSize)  | project Computer, CapacityStartTime = TimeGenerated, CapacityEndTime = TimeGenerated + trendBinSize, LimitValue) on Computer| join kind=inner hint.strategy=shuffle (  Perf  | where TimeGenerated < endDateTime + trendBinSize  | where TimeGenerated >= startDateTime - trendBinSize  | where ObjectName == 'K8SNode'  | where CounterName == usageCounterName  | project Computer, UsageValue = CounterValue, TimeGenerated) on Computer| where TimeGenerated >= CapacityStartTime and TimeGenerated < CapacityEndTime| project ClusterName, Computer, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue, _ResourceId| summarize AggregatedValue = avg(UsagePercent) by bin(TimeGenerated, trendBinSize), ClusterName, _ResourceId"
Container CPU ,"Perf| where ObjectName == ""K8SContainer"" and CounterName == ""cpuUsageNanoCores""| summarize AvgCPUUsageNanoCores = avg(CounterValue) by bin(TimeGenerated, 1d), InstanceName, _ResourceId"
Signin Locations,"SigninLogs| summarize Successful=countif(ResultType==0), Failed=countif(ResultType!=0) by Location"
